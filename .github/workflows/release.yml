name: Create Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from release tag
        id: version
        run: |
          # Extract version from release tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update plugin version
        run: |
          PLUGIN_FILE="cf7-propstack-integration.php"
          VERSION="${{ steps.version.outputs.version }}"
          # Update header version
          sed -i "s/Version: [0-9]\+\.[0-9]\+\.[0-9]\+/Version: $VERSION/" "$PLUGIN_FILE"
          # Update CF7_PROPSTACK_VERSION constant
          sed -i "s/define('CF7_PROPSTACK_VERSION', '[^']*');/define('CF7_PROPSTACK_VERSION', '$VERSION');/" "$PLUGIN_FILE"
          # Verify version was updated
          if ! grep -q "Version: $VERSION" "$PLUGIN_FILE"; then
            echo "Error: Failed to update header version in plugin file"
            exit 1
          fi
          if ! grep -q "define('CF7_PROPSTACK_VERSION', '$VERSION');" "$PLUGIN_FILE"; then
            echo "Error: Failed to update CF7_PROPSTACK_VERSION in plugin file"
            exit 1
          fi
          echo "Version updated to $VERSION"

      - name: Commit and push version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add cf7-propstack-integration.php
          git commit -m "Bump version to ${{ steps.version.outputs.version }} [skip ci]"
          git push origin HEAD:main

      - name: Create plugin zip
        run: |
          # Create a temporary directory for the plugin
          mkdir -p temp/cf7-propstack-integration

          # Copy plugin files (excluding development files and temp itself)
          shopt -s extglob
          cp -r !(temp) temp/cf7-propstack-integration/

          # Remove development files
          rm -rf temp/cf7-propstack-integration/.git
          rm -rf temp/cf7-propstack-integration/.github
          rm -f temp/cf7-propstack-integration/README.md
          rm -f temp/cf7-propstack-integration/.gitignore
          rm -f temp/cf7-propstack-integration/UPDATE.md

          # Create zip file
          cd temp
          zip -r cf7-propstack-integration.zip cf7-propstack-integration/

          # Move zip to root
          mv cf7-propstack-integration.zip ../

      - name: Update README with download link
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          RELEASE_URL="${{ github.event.release.html_url }}"

          # Create the download section content
          DOWNLOAD_SECTION="## ðŸ“¦ Download Latest Release

          **Version $VERSION** - [Download ZIP](https://github.com/${{ github.repository }}/releases/download/v$VERSION/cf7-propstack-integration.zip)

          [View all releases]($RELEASE_URL) | [Installation Guide](#installation)

          ---

          "

          # Create a temporary file with the new content
          echo "$DOWNLOAD_SECTION" > temp_download_section.md

          # Remove any existing 'Download Latest Release' section (from the header to the next ---)
          awk '/^## ðŸ“¦ Download Latest Release/{flag=1; next} /^---$/{flag=0; next} !flag' README.md > temp_rest.md

          # Combine the new download section with the cleaned rest
          cat temp_download_section.md temp_rest.md > README.md

          # Clean up temporary files
          rm temp_download_section.md temp_rest.md

          echo "Updated README with download link for version $VERSION"

      - name: Commit and push README update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Add download link for version ${{ steps.version.outputs.version }} to README [skip ci]"
          git push origin HEAD:main

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cf7-propstack-integration.zip
          asset_name: cf7-propstack-integration.zip
          asset_content_type: application/zip
